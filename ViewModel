
class  IndustryDepartmentCenterViewModel: ObservableObject {
    @Published var datas:[IndustryCenterDepartment]?
    @Published var departments:IndustryDepartmentCenter?
    
    func getDepartmentData() {

//        let apiurl = APILoginUtility.studentExamTestApi
        guard let url = URL(string: "https://www.alibrary.in/api/industry/create-department?center_id=2524") else {
            // handle invalid URL error
            print("This is incorrect API URL...")
            return
        }
        let defaults = UserDefaults.standard
        guard let token = defaults.string(forKey: "access_token") else {
            return
        }
        let service = HTTPLoginUtility()

        service.getLoginData(from: url, model: IndustryDepartmentModel.self, token: token){ (result) in
            switch result {
            case .success(let results):
                DispatchQueue.main.async {
                    self.datas = results.center.center_departments
                    self.departments = results.center
                    print(self.datas  as Any)
                }
            case .failure(let error):
                print(error.localizedDescription)

            }

        }

    }

}
